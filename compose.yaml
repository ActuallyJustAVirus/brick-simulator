networks:
    network1:
        driver: bridge
    network2:
        driver: bridge

volumes:
    database_data:
        name: brick_db_data

services:
    proxy:
        image: nginx:alpine
        container_name: brick_proxy
        restart: unless-stopped
        ports:
            - '4210:80'
        volumes:
             - ./frontend:/usr/share/nginx/html
             - ./nginx/conf.d:/etc/nginx/conf.d
        networks:
            - network1
        depends_on:
            - backend
    backend:
        build: ./backend
        container_name: brick_backend
        networks:
            - network1
            - network2
        # environment:
        #     DB_HOST: database    # This is correct - matches the service name
        #     DB_PORT: 3306
        #     DB_USER: root       # Using root as defined in MYSQL_ROOT_PASSWORD
        #     DB_PASS: Hyg57aff   # Matches MYSQL_ROOT_PASSWORD
        #     DB_NAME: persondb
        depends_on:
            database:
                condition: service_healthy

    database:
        image: mysql
        container_name: brick_db
        restart: unless-stopped
        environment:
            MYSQL_ROOT_PASSWORD: admin
            MYSQL_DATABASE: brick_db
        healthcheck:
            test: ['CMD', 'mysqladmin', 'ping', '-h', '127.0.0.1']
            interval: 10s
            timeout: 5s
            retries: 5
        volumes:
            - database_data:/var/lib/mysql
            - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
        networks:
            - network2
